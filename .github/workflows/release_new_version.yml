name: Release Package

on:
  workflow_dispatch

concurrency:
  group: bumpversion-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: false

jobs:
  release:
    name: Create Release
    runs-on: 'ubuntu-latest'
    steps:
      - name: "Checkout repository"
        uses: 'actions/checkout@v3'
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0
          token: ${{ secrets.GH_ACCESS_TOKEN }}
      - uses: actions/setup-go@v3
        with:
          go-version: '1.19'
          check-latest: true
      - name: Get OS and arch info
        run: |
          GOOSARCH=${{matrix.goosarch}}
          GOOS=${GOOSARCH%/*}
          GOARCH=${GOOSARCH#*/}
          BINARY_NAME=${{github.repository}}-$GOOS-$GOARCH
          echo "BINARY_NAME=$BINARY_NAME" >> $GITHUB_ENV
          echo "GOOS=$GOOS" >> $GITHUB_ENV
          echo "GOARCH=$GOARCH" >> $GITHUB_ENV
      - name: Build
        run: |
          go build -o "$BINARY_NAME" -v
      - name: Release with Notes
        uses: softprops/action-gh-release@v1
        with:
          body_path: ".github/RELEASE-TEMPLATE.md"
          draft: true
          files: ${{env.BINARY_NAME}}
        env:
          GITHUB_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}
  publish:
    runs-on: ubuntu-latest
    needs: release
    steps:
      - name: "Checkout repository"
        uses: 'actions/checkout@v3'
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0
          token: ${{ secrets.GH_ACCESS_TOKEN }}
      - name: Ping endpoint
        run: curl "https://proxy.golang.org/github.com/keremdokumaci/comandante/${{ github.event.inputs.version }}/$(git describe HEAD --tags --abbrev=0).info"
